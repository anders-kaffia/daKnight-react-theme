/* 
*				Mixins
========================================================================== */

/*
*			MQ Breakpoints
-----------------------------------------------------------------------------------------------*/

@mixin breakpoint($class) {
  @if $class == xs {
    @media (max-width: 767px) { @content; }
  }
 
  @else if $class == sm {
	@media (min-width: 768px) and (max-width: 991px) { @content; }
  }
 
  @else if $class == md {
	@media (min-width: 992px) and (max-width: 1199px) { @content; }
  }
 
  @else if $class == lg {
    @media (min-width: 1200px) { @content; }
  }
 
  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg";
  }
}

/*
*			Spacing (padding / margin)
-----------------------------------------------------------------------------------------------*/

@mixin small-spacing($property) {
	@include breakpoint(xs) { 
		#{$property}: .4em;
	 }
 
  	@include breakpoint(sm) {
		#{$property}: .6em;
	 }
 
  	@include breakpoint(md) {
		#{$property}: .8em;
	}
 
	@include breakpoint(lg) {
		#{$property}: 1em;
	}
}

@mixin large-spacing($property) {
	@include breakpoint(xs) { 
		#{$property}: 1.2em;
	 }
 
  	@include breakpoint(sm) {
		#{$property}: 1.4em;
	 }
 
  	@include breakpoint(md) {
		#{$property}: 1.6em;
	}
 
	@include breakpoint(lg) {
		#{$property}: 2em;
	}
}

/*
*			 Calculates section height minus body padding and section margin
-----------------------------------------------------------------------------------------------*/
@mixin section-height {
	@include breakpoint(xs) { 
	min-height: calc(100vh - 143.6px);
	}
	@include breakpoint(sm) {
		min-height: calc(100vh - 167.2px);
	}
	@include breakpoint(md) {
		min-height: calc(100vh - 186.8px);
	}
	@include breakpoint(lg) {
		min-height: calc(100vh - 216px);
	}
}

/*
*			 Change size with media queries. Mainly for font-size
-----------------------------------------------------------------------------------------------*/

@mixin mq-size($property, $default, $unit) {
  	@include breakpoint(xs) { 
		#{$property}: #{($default * .6)}$unit;
	 }
 
  	@include breakpoint(sm) {
		#{$property}: #{($default * .9)}$unit;
	 }
 
  	@include breakpoint(md) {
		#{$property}: #{$default}$unit;
	}
 
	@include breakpoint(lg) {
		#{$property}: #{($default * 1.2)}$unit;
	}
}

/*
*			 Placeholder (for the contact form)
-----------------------------------------------------------------------------------------------*/

@mixin placeholder-color-font($color, $font-family, $font-size) {
  &::-webkit-input-placeholder { 
      color: $color;
	  font-family: $font-family;
	  font-size: $font-size;
	  font-weight: 600;
	  padding: 1%;
  }
  &:-moz-placeholder { 
      color: $color;
	  font-family: $font-family;
	  font-size: $font-size;
	  font-weight: 600;
	  padding: 1%;
  }
  &::-moz-placeholder { 
      color: $color;
	  font-family: $font-family;
	  font-size: $font-size;
	  font-weight: 600;
	  padding: 1%;
  }
  &:-ms-input-placeholder { 
      color: $color;
	  font-family: $font-family;
	  font-size: $font-size;
	  font-weight: 600;
	  padding: 1%;
  }
}

@mixin placeholder-align($align) {
  &::-webkit-input-placeholder { 
      text-align: $align;
  }
  &:-moz-placeholder { 
      text-align: $align;
  }
  &::-moz-placeholder { 
      text-align: $align;
  }
  &:-ms-input-placeholder { 
      text-align: $align;
  }
}




